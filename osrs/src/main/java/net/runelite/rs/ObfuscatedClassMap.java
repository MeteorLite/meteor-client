package net.runelite.rs;

import java.util.HashMap;

public class ObfuscatedClassMap extends HashMap<String, String> {
    public static ObfuscatedClassMap INSTANCE = new ObfuscatedClassMap();
    static {
		INSTANCE.put("AABB", "ie");
		INSTANCE.put("AbstractArchive", "ne");
		INSTANCE.put("AbstractByteArrayCopier", "mh");
		INSTANCE.put("AbstractFont", "ou");
		INSTANCE.put("AbstractRasterProvider", "sm");
		INSTANCE.put("AbstractSocket", "pj");
		INSTANCE.put("AbstractSound", "ce");
		INSTANCE.put("AbstractUserComparator", "pl");
		INSTANCE.put("AbstractWorldMapData", "js");
		INSTANCE.put("AbstractWorldMapIcon", "ku");
		INSTANCE.put("AccessFile", "re");
		INSTANCE.put("Actor", "dq");
		INSTANCE.put("Animation", "ig");
		INSTANCE.put("ApproximateRouteStrategy", "cy");
		INSTANCE.put("Archive", "mx");
		INSTANCE.put("ArchiveDisk", "pv");
		INSTANCE.put("ArchiveDiskAction", "mk");
		INSTANCE.put("ArchiveDiskActionHandler", "mp");
		INSTANCE.put("ArchiveLoader", "dp");
		INSTANCE.put("AttackOption", "dy");
		INSTANCE.put("AudioFilter", "cj");
		INSTANCE.put("BoundaryObject", "jc");
		INSTANCE.put("Bounds", "qy");
		INSTANCE.put("Buddy", "pt");
		INSTANCE.put("BuddyRankComparator", "ea");
		INSTANCE.put("Buffer", "sy");
		INSTANCE.put("BufferedFile", "rq");
		INSTANCE.put("BufferedNetSocket", "pr");
		INSTANCE.put("BufferedSink", "pg");
		INSTANCE.put("BufferedSource", "px");
		INSTANCE.put("ByteArrayNode", "qc");
		INSTANCE.put("ByteArrayPool", "ot");
		INSTANCE.put("BZip2Decompressor", "sw");
		INSTANCE.put("BZip2State", "ss");
		INSTANCE.put("Calendar", "mv");
		INSTANCE.put("Canvas", "aa");
		INSTANCE.put("ChatChannel", "du");
		INSTANCE.put("ClanChannel", "gn");
		INSTANCE.put("ClanChannelMember", "fy");
		INSTANCE.put("ClanMate", "po");
		INSTANCE.put("ClanSettings", "fi");
		INSTANCE.put("class0", "aj");
		INSTANCE.put("class1", "al");
		INSTANCE.put("class10", "ak");
		INSTANCE.put("class102", "dn");
		INSTANCE.put("class103", "di");
		INSTANCE.put("class105", "ei");
		INSTANCE.put("class11", "ax");
		INSTANCE.put("class110", "er");
		INSTANCE.put("class12", "as");
		INSTANCE.put("class121", "ey");
		INSTANCE.put("class122", "eq");
		INSTANCE.put("class123", "eh");
		INSTANCE.put("class124", "ek");
		INSTANCE.put("class125", "ej");
		INSTANCE.put("class126", "ez");
		INSTANCE.put("class127", "ew");
		INSTANCE.put("class128", "eu");
		INSTANCE.put("class129", "ed");
		INSTANCE.put("class13", "ay");
		INSTANCE.put("class130", "fz");
		INSTANCE.put("class131", "fr");
		INSTANCE.put("class132", "fs");
		INSTANCE.put("class133", "fe");
		INSTANCE.put("class134", "fl");
		INSTANCE.put("class135", "fa");
		INSTANCE.put("class136", "ft");
		INSTANCE.put("class137", "ff");
		INSTANCE.put("class138", "fb");
		INSTANCE.put("class139", "fg");
		INSTANCE.put("class14", "am");
		INSTANCE.put("class140", "fj");
		INSTANCE.put("class141", "fv");
		INSTANCE.put("class143", "fo");
		INSTANCE.put("class144", "fk");
		INSTANCE.put("class145", "fw");
		INSTANCE.put("class146", "fn");
		INSTANCE.put("class147", "fc");
		INSTANCE.put("class148", "fm");
		INSTANCE.put("class149", "fq");
		INSTANCE.put("class15", "az");
		INSTANCE.put("class150", "fh");
		INSTANCE.put("class152", "fu");
		INSTANCE.put("class153", "fd");
		INSTANCE.put("class154", "fp");
		INSTANCE.put("class155", "fx");
		INSTANCE.put("class156", "gm");
		INSTANCE.put("class157", "gk");
		INSTANCE.put("class158", "gb");
		INSTANCE.put("class159", "go");
		INSTANCE.put("class16", "ae");
		INSTANCE.put("class161", "ga");
		INSTANCE.put("class162", "gz");
		INSTANCE.put("class163", "gu");
		INSTANCE.put("class164", "gw");
		INSTANCE.put("class166", "gr");
		INSTANCE.put("class167", "gs");
		INSTANCE.put("class169", "gl");
		INSTANCE.put("class17", "au");
		INSTANCE.put("class171", "gc");
		INSTANCE.put("class173", "gx");
		INSTANCE.put("class174", "gg");
		INSTANCE.put("class175", "gd");
		INSTANCE.put("class178", "gp");
		INSTANCE.put("class18", "ag");
		INSTANCE.put("class181", "gt");
		INSTANCE.put("class188", "hs");
		INSTANCE.put("class19", "at");
		INSTANCE.put("class196", "hw");
		INSTANCE.put("class199", "hy");
		INSTANCE.put("class2", "ac");
		INSTANCE.put("class20", "af");
		INSTANCE.put("class206", "hi");
		INSTANCE.put("class207", "ht");
		INSTANCE.put("class208", "ic");
		INSTANCE.put("class212", "im");
		INSTANCE.put("class220", "ik");
		INSTANCE.put("class240", "jr");
		INSTANCE.put("class248", "jq");
		INSTANCE.put("class249", "jh");
		INSTANCE.put("class258", "jj");
		INSTANCE.put("class26", "bm");
		INSTANCE.put("class260", "kk");
		INSTANCE.put("class268", "kf");
		INSTANCE.put("class269", "kw");
		INSTANCE.put("class27", "bv");
		INSTANCE.put("class270", "kj");
		INSTANCE.put("class271", "kr");
		INSTANCE.put("class272", "kc");
		INSTANCE.put("class278", "ks");
		INSTANCE.put("class279", "kq");
		INSTANCE.put("class28", "bo");
		INSTANCE.put("class281", "kl");
		INSTANCE.put("class287", "lk");
		INSTANCE.put("class288", "lv");
		INSTANCE.put("class289", "lg");
		INSTANCE.put("class29", "bs");
		INSTANCE.put("class290", "lr");
		INSTANCE.put("class291", "lq");
		INSTANCE.put("class293", "lf");
		INSTANCE.put("class3", "ab");
		INSTANCE.put("class30", "bg");
		INSTANCE.put("class304", "ll");
		INSTANCE.put("class305", "le");
		INSTANCE.put("class306", "lu");
		INSTANCE.put("class307", "ls");
		INSTANCE.put("class308", "la");
		INSTANCE.put("class31", "bh");
		INSTANCE.put("class310", "lo");
		INSTANCE.put("class311", "ly");
		INSTANCE.put("class313", "ma");
		INSTANCE.put("class315", "mw");
		INSTANCE.put("class319", "mi");
		INSTANCE.put("class320", "md");
		INSTANCE.put("class323", "mb");
		INSTANCE.put("class324", "mz");
		INSTANCE.put("class325", "mj");
		INSTANCE.put("class326", "mr");
		INSTANCE.put("class329", "mc");
		INSTANCE.put("class33", "bk");
		INSTANCE.put("class331", "mq");
		INSTANCE.put("class333", "mu");
		INSTANCE.put("class345", "na");
		INSTANCE.put("class350", "nb");
		INSTANCE.put("class351", "nu");
		INSTANCE.put("class352", "nt");
		INSTANCE.put("class353", "np");
		INSTANCE.put("class36", "bz");
		INSTANCE.put("class364", "om");
		INSTANCE.put("class365", "oa");
		INSTANCE.put("class366", "ok");
		INSTANCE.put("class368", "ov");
		INSTANCE.put("class369", "og");
		INSTANCE.put("class370", "oh");
		INSTANCE.put("class371", "ob");
		INSTANCE.put("class372", "oi");
		INSTANCE.put("class373", "op");
		INSTANCE.put("class375", "ow");
		INSTANCE.put("class376", "oj");
		INSTANCE.put("class377", "od");
		INSTANCE.put("class379", "on");
		INSTANCE.put("class380", "oz");
		INSTANCE.put("class381", "oc");
		INSTANCE.put("class383", "or");
		INSTANCE.put("class385", "ox");
		INSTANCE.put("class388", "oq");
		INSTANCE.put("class389", "oy");
		INSTANCE.put("class390", "pu");
		INSTANCE.put("class391", "pi");
		INSTANCE.put("class392", "pm");
		INSTANCE.put("class393", "ps");
		INSTANCE.put("class394", "pe");
		INSTANCE.put("class395", "pn");
		INSTANCE.put("class4", "an");
		INSTANCE.put("class418", "qa");
		INSTANCE.put("class419", "qe");
		INSTANCE.put("class420", "qh");
		INSTANCE.put("class421", "qt");
		INSTANCE.put("class422", "qx");
		INSTANCE.put("class423", "qo");
		INSTANCE.put("class424", "qs");
		INSTANCE.put("class425", "qv");
		INSTANCE.put("class426", "ql");
		INSTANCE.put("class427", "qf");
		INSTANCE.put("class428", "qd");
		INSTANCE.put("class429", "qq");
		INSTANCE.put("class430", "qw");
		INSTANCE.put("class431", "qn");
		INSTANCE.put("class432", "qb");
		INSTANCE.put("class433", "qg");
		INSTANCE.put("class434", "qm");
		INSTANCE.put("class435", "qr");
		INSTANCE.put("class436", "qz");
		INSTANCE.put("class451", "rv");
		INSTANCE.put("class455", "ri");
		INSTANCE.put("class456", "rn");
		INSTANCE.put("class458", "rl");
		INSTANCE.put("class461", "rr");
		INSTANCE.put("class462", "rw");
		INSTANCE.put("class463", "rj");
		INSTANCE.put("class464", "ro");
		INSTANCE.put("class465", "rg");
		INSTANCE.put("class466", "rd");
		INSTANCE.put("class467", "rf");
		INSTANCE.put("class468", "sd");
		INSTANCE.put("class471", "st");
		INSTANCE.put("class473", "sk");
		INSTANCE.put("class475", "se");
		INSTANCE.put("class478", "sz");
		INSTANCE.put("class481", "so");
		INSTANCE.put("class482", "sg");
		INSTANCE.put("class485", "sl");
		INSTANCE.put("class486", "sj");
		INSTANCE.put("class492", "sa");
		INSTANCE.put("class495", "tl");
		INSTANCE.put("class499", "tm");
		INSTANCE.put("class5", "ao");
		INSTANCE.put("class50", "bw");
		INSTANCE.put("class6", "av");
		INSTANCE.put("class60", "cc");
		INSTANCE.put("class69", "cx");
		INSTANCE.put("class7", "aq");
		INSTANCE.put("class70", "cu");
		INSTANCE.put("class72", "cw");
		INSTANCE.put("class8", "ap");
		INSTANCE.put("class83", "dr");
		INSTANCE.put("class87", "dd");
		INSTANCE.put("class88", "dv");
		INSTANCE.put("class9", "ar");
		INSTANCE.put("class90", "dj");
		INSTANCE.put("class98", "dl");
		INSTANCE.put("class99", "df");
		INSTANCE.put("Client", "client");
		INSTANCE.put("ClientPacket", "kb");
		INSTANCE.put("ClientPreferences", "db");
		INSTANCE.put("Clock", "gj");
		INSTANCE.put("CollisionMap", "iz");
		INSTANCE.put("com/jagex/oldscape/pub/RefreshAccessTokenRequester", "com/jagex/oldscape/pub/RefreshAccessTokenRequester");
		INSTANCE.put("com/jagex/oldscape/pub/RefreshAccessTokenResponse", "com/jagex/oldscape/pub/RefreshAccessTokenResponse");
		INSTANCE.put("Coord", "lt");
		INSTANCE.put("DbRowType", "sh");
		INSTANCE.put("DbTableType", "sx");
		INSTANCE.put("Decimator", "co");
		INSTANCE.put("DefaultsGroup", "pp");
		INSTANCE.put("DemotingHashTable", "ky");
		INSTANCE.put("DesktopPlatformInfoProvider", "ra");
		INSTANCE.put("DevicePcmPlayer", "ah");
		INSTANCE.put("DevicePcmPlayerProvider", "aw");
		INSTANCE.put("DirectByteArrayCopier", "mo");
		INSTANCE.put("DirectWrapper", "ka");
		INSTANCE.put("DualNode", "qk");
		INSTANCE.put("DualNodeDeque", "nl");
		INSTANCE.put("DynamicObject", "cr");
		INSTANCE.put("EnumComposition", "hg");
		INSTANCE.put("EvictingDualNodeHashTable", "kt");
		INSTANCE.put("FaceNormal", "if");
		INSTANCE.put("FileSystem", "gh");
		INSTANCE.put("FillMode", "sc");
		INSTANCE.put("FloorDecoration", "ib");
		INSTANCE.put("FloorOverlayDefinition", "hz");
		INSTANCE.put("FloorUnderlayDefinition", "hk");
		INSTANCE.put("Font", "oe");
		INSTANCE.put("FontName", "ry");
		INSTANCE.put("Fonts", "rs");
		INSTANCE.put("Frames", "iw");
		INSTANCE.put("Friend", "pk");
		INSTANCE.put("FriendLoginUpdate", "pz");
		INSTANCE.put("FriendsChat", "pa");
		INSTANCE.put("FriendsList", "py");
		INSTANCE.put("FriendSystem", "cg");
		INSTANCE.put("GameBuild", "mf");
		INSTANCE.put("GameEngine", "br");
		INSTANCE.put("GameObject", "jm");
		INSTANCE.put("GrandExchangeEvent", "nv");
		INSTANCE.put("GrandExchangeEvents", "nz");
		INSTANCE.put("GrandExchangeOffer", "nd");
		INSTANCE.put("GrandExchangeOfferAgeComparator", "nf");
		INSTANCE.put("GrandExchangeOfferNameComparator", "nr");
		INSTANCE.put("GrandExchangeOfferOwnWorldComparator", "ck");
		INSTANCE.put("GrandExchangeOfferTotalQuantityComparator", "ng");
		INSTANCE.put("GrandExchangeOfferUnitPriceComparator", "no");
		INSTANCE.put("GrandExchangeOfferWorldComparator", "nw");
		INSTANCE.put("GraphicsDefaults", "pw");
		INSTANCE.put("GraphicsObject", "cq");
		INSTANCE.put("GZipDecompressor", "te");
		INSTANCE.put("HealthBar", "dm");
		INSTANCE.put("HealthBarDefinition", "hn");
		INSTANCE.put("HealthBarUpdate", "dw");
		INSTANCE.put("HitSplatDefinition", "hf");
		INSTANCE.put("HorizontalAlignment", "ho");
		INSTANCE.put("Huffman", "mg");
		INSTANCE.put("Ignored", "pc");
		INSTANCE.put("IgnoreList", "pq");
		INSTANCE.put("IndexedSprite", "sp");
		INSTANCE.put("Instrument", "cn");
		INSTANCE.put("IntegerNode", "rx");
		INSTANCE.put("InterfaceParent", "de");
		INSTANCE.put("Interpreter", "cs");
		INSTANCE.put("IntHashTable", "td");
		INSTANCE.put("InvDefinition", "hb");
		INSTANCE.put("IsaacCipher", "tk");
		INSTANCE.put("ItemComposition", "hh");
		INSTANCE.put("ItemContainer", "dk");
		INSTANCE.put("ItemLayer", "ij");
		INSTANCE.put("IterableDualNodeQueue", "nh");
		INSTANCE.put("IterableDualNodeQueueIterator", "nn");
		INSTANCE.put("IterableNodeDeque", "ni");
		INSTANCE.put("IterableNodeDequeDescendingIterator", "nc");
		INSTANCE.put("IterableNodeHashTable", "rz");
		INSTANCE.put("IterableNodeHashTableIterator", "rp");
		INSTANCE.put("JagexCache", "gi");
		INSTANCE.put("JSONArray", "org/json/JSONArray");
		INSTANCE.put("JSONException", "org/json/JSONException");
		INSTANCE.put("JSONObject$Null", "org/json/JSONObject$Null");
		INSTANCE.put("JSONObject", "org/json/JSONObject");
		INSTANCE.put("JSONString", "org/json/JSONString");
		INSTANCE.put("JSONTokener", "org/json/JSONTokener");
		INSTANCE.put("KeyHandler", "ad");
		INSTANCE.put("KitDefinition", "hv");
		INSTANCE.put("Language", "nq");
		INSTANCE.put("Link", "qi");
		INSTANCE.put("LinkDeque", "ny");
		INSTANCE.put("Login", "cp");
		INSTANCE.put("LoginPacket", "ln");
		INSTANCE.put("LoginScreenAnimation", "dt");
		INSTANCE.put("LoginType", "rm");
		INSTANCE.put("LongNode", "qj");
		INSTANCE.put("MenuAction", "cm");
		INSTANCE.put("Message", "ct");
		INSTANCE.put("Messages", "ex");
		INSTANCE.put("MidiFileReader", "lm");
		INSTANCE.put("MidiPcmStream", "lz");
		INSTANCE.put("MilliClock", "gq");
		INSTANCE.put("Model", "ix");
		INSTANCE.put("ModelData", "iu");
		INSTANCE.put("ModelData0", "ju");
		INSTANCE.put("ModeWhere", "nm");
		INSTANCE.put("MouseHandler", "ba");
		INSTANCE.put("MouseRecorder", "ds");
		INSTANCE.put("MouseWheelHandler", "ai");
		INSTANCE.put("MoveSpeed", "is");
		INSTANCE.put("MusicPatch", "lb");
		INSTANCE.put("MusicPatchNode", "lp");
		INSTANCE.put("MusicPatchNode2", "lj");
		INSTANCE.put("MusicPatchPcmStream", "ld");
		INSTANCE.put("MusicTrack", "lh");
		INSTANCE.put("NanoClock", "gy");
		INSTANCE.put("net/runelite/rs/Opcodes", "net/runelite/rs/Opcodes");
		INSTANCE.put("NetCache", "nk");
		INSTANCE.put("NetFileRequest", "ns");
		INSTANCE.put("NewShit", "hj");
		INSTANCE.put("Node", "ru");
		INSTANCE.put("NodeDeque", "nj");
		INSTANCE.put("NodeHashTable", "rh");
		INSTANCE.put("NPC", "dz");
		INSTANCE.put("NPCComposition", "hl");
		INSTANCE.put("ObjectComposition", "hu");
		INSTANCE.put("ObjectNode", "qp");
		INSTANCE.put("ObjectSound", "ch");
		INSTANCE.put("ObjTypeCustomisation", "gv");
		INSTANCE.put("Occluder", "io");
		INSTANCE.put("OtlTokenResponse", "com/jagex/oldscape/pub/OtlTokenResponse");
		INSTANCE.put("PacketBuffer", "sq");
		INSTANCE.put("PacketBufferNode", "kp");
		INSTANCE.put("PacketWriter", "ep");
		INSTANCE.put("ParamComposition", "hp");
		INSTANCE.put("PcmPlayer", "bd");
		INSTANCE.put("PcmStream", "bj");
		INSTANCE.put("PcmStreamMixer", "bc");
		INSTANCE.put("PcmStreamMixerListener", "cb");
		INSTANCE.put("PendingSpawn", "da");
		INSTANCE.put("PlatformInfo", "rt");
		INSTANCE.put("PlatformInfoProvider", "rb");
		INSTANCE.put("Player", "dh");
		INSTANCE.put("PlayerComposition", "lc");
		INSTANCE.put("Players", "en");
		INSTANCE.put("PlayerType", "mn");
		INSTANCE.put("PrivateChatMode", "tg");
		INSTANCE.put("Projectile", "ci");
		INSTANCE.put("Rasterizer2D", "sf");
		INSTANCE.put("Rasterizer3D", "ih");
		INSTANCE.put("RasterProvider", "bl");
		INSTANCE.put("RawPcmStream", "bn");
		INSTANCE.put("RawSound", "be");
		INSTANCE.put("ReflectionCheck", "bq");
		INSTANCE.put("Renderable", "iq");
		INSTANCE.put("RouteStrategy", "ip");
		INSTANCE.put("RunException", "tw");
		INSTANCE.put("Scene", "ir");
		INSTANCE.put("SceneTileModel", "il");
		INSTANCE.put("SceneTilePaint", "it");
		INSTANCE.put("Script", "cv");
		INSTANCE.put("ScriptEvent", "dx");
		INSTANCE.put("ScriptFrame", "cd");
		INSTANCE.put("SecureRandomCallable", "dc");
		INSTANCE.put("SecureRandomFuture", "cf");
		INSTANCE.put("SequenceDefinition", "hx");
		INSTANCE.put("ServerPacket", "ke");
		INSTANCE.put("Skeleton", "in");
		INSTANCE.put("Skills", "mm");
		INSTANCE.put("SoftWrapper", "ko");
		INSTANCE.put("SoundCache", "bb");
		INSTANCE.put("SoundEffect", "bt");
		INSTANCE.put("SoundEnvelope", "by");
		INSTANCE.put("SoundSystem", "bp");
		INSTANCE.put("SpotAnimationDefinition", "ha");
		INSTANCE.put("SpriteMask", "lx");
		INSTANCE.put("SpritePixels", "sn");
		INSTANCE.put("Strings", "me");
		INSTANCE.put("StructComposition", "hm");
		INSTANCE.put("StudioGame", "ml");
		INSTANCE.put("Task", "gf");
		INSTANCE.put("TaskHandler", "ge");
		INSTANCE.put("Texture", "ii");
		INSTANCE.put("TextureLoader", "jp");
		INSTANCE.put("TextureProvider", "ia");
		INSTANCE.put("Tile", "id");
		INSTANCE.put("TileItem", "do");
		INSTANCE.put("Tiles", "dg");
		INSTANCE.put("Timer", "os");
		INSTANCE.put("TriBool", "pf");
		INSTANCE.put("UrlRequest", "eo");
		INSTANCE.put("UrlRequester", "eb");
		INSTANCE.put("User", "pb");
		INSTANCE.put("UserComparator1", "sb");
		INSTANCE.put("UserComparator10", "es");
		INSTANCE.put("UserComparator2", "su");
		INSTANCE.put("UserComparator3", "ec");
		INSTANCE.put("UserComparator4", "ev");
		INSTANCE.put("UserComparator5", "el");
		INSTANCE.put("UserComparator6", "em");
		INSTANCE.put("UserComparator7", "et");
		INSTANCE.put("UserComparator8", "ef");
		INSTANCE.put("UserComparator9", "eg");
		INSTANCE.put("UserList", "ph");
		INSTANCE.put("Username", "tj");
		INSTANCE.put("Usernamed", "pd");
		INSTANCE.put("VarbitComposition", "hq");
		INSTANCE.put("VarcInt", "hr");
		INSTANCE.put("Varcs", "ee");
		INSTANCE.put("VarpDefinition", "hc");
		INSTANCE.put("Varps", "li");
		INSTANCE.put("VertexNormal", "iy");
		INSTANCE.put("VerticalAlignment", "he");
		INSTANCE.put("ViewportMouse", "iv");
		INSTANCE.put("VorbisCodebook", "bi");
		INSTANCE.put("VorbisFloor", "bu");
		INSTANCE.put("VorbisMapping", "bf");
		INSTANCE.put("VorbisResidue", "bx");
		INSTANCE.put("VorbisSample", "cl");
		INSTANCE.put("WallDecoration", "jg");
		INSTANCE.put("Widget", "my");
		INSTANCE.put("World", "cz");
		INSTANCE.put("WorldMap", "rc");
		INSTANCE.put("WorldMapArchiveLoader", "rk");
		INSTANCE.put("WorldMapArea", "jw");
		INSTANCE.put("WorldMapAreaData", "km");
		INSTANCE.put("WorldMapCacheName", "kg");
		INSTANCE.put("WorldMapData_0", "jo");
		INSTANCE.put("WorldMapData_1", "je");
		INSTANCE.put("WorldMapDecoration", "ji");
		INSTANCE.put("WorldMapDecorationType", "ms");
		INSTANCE.put("WorldMapElement", "hd");
		INSTANCE.put("WorldMapEvent", "kh");
		INSTANCE.put("WorldMapIcon_0", "jy");
		INSTANCE.put("WorldMapIcon_1", "jk");
		INSTANCE.put("WorldMapID", "jx");
		INSTANCE.put("WorldMapLabel", "jb");
		INSTANCE.put("WorldMapLabelSize", "jd");
		INSTANCE.put("WorldMapManager", "jt");
		INSTANCE.put("WorldMapRectangle", "jl");
		INSTANCE.put("WorldMapRegion", "ja");
		INSTANCE.put("WorldMapScaleHandler", "kn");
		INSTANCE.put("WorldMapSection", "kd");
		INSTANCE.put("WorldMapSection0", "jz");
		INSTANCE.put("WorldMapSection1", "kx");
		INSTANCE.put("WorldMapSection2", "jf");
		INSTANCE.put("WorldMapSectionType", "jv");
		INSTANCE.put("WorldMapSprite", "jn");
		INSTANCE.put("Wrapper", "ki");
		INSTANCE.put("ZoneOperation", "kz");
    }
}